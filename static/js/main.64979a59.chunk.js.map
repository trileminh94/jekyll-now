{"version":3,"sources":["reportWebVitals.js","components/atoms/Loading/index.js","setup/error.js","static/type/apiConstants.js","static/type/urlConstants.js","setup/setupAxios.js","index.profile.js","index.js","index.mobile.js","index.blog.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Loading","className","SetupError","message","callback","Error","handleIndexSetupError","error","console","Sentry","window","location","href","RESPONSE_CODE","WEB_URL","DENIED_RESULT_CODES","axios","defaults","headers","common","Pragma","setupAxios","Promise","resolve","interceptors","request","use","a","config","NProgress","start","done","reject","response","lodash","get","includes","data","code","process","AUTH_URL","REACT_APP_WEB_URL","dsn","autoSessionTracking","integrations","Integrations","BrowserTracing","tracesSampleRate","ReactDOM","render","document","getElementById","Portfolio","React","lazy","Blog","StrictMode","fallback","exact","path","component","catch","hostname","pathname","mobileUrl","REACT_APP_MOBILE","log","startsWith","require"],"mappings":"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","file":"static/js/main.64979a59.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport './index.css'\n\nconst Loading = () => {\n    return (\n        <p className=\"AppHeader\">\n            Đang tải...\n        </p>\n    )\n}\n\nexport default Loading","import * as Sentry from '@sentry/browser';\n\nclass SetupError extends Error {\n    constructor(message, callback) {\n        super(message);\n        this.callback = callback;\n    }\n}\n\nconst handleIndexSetupError = (error) => {\n    console.error(error);\n\n    if (error instanceof SetupError && error.callback) {\n        error.callback();\n    } else {\n        Sentry.captureException(error);\n        window.location.href = '/error';\n    }\n};\n\nexport { SetupError, handleIndexSetupError };\n","const API_STATUS = {\n    SUCCESS: 200,\n    INTERNAL_ERROR: 500,\n    NOT_EXIST: 404,\n};\n\nconst DEBUGGABLE_USER_INFO = {\n    \n};\n\nconst RESPONSE_CODE = {\n    SUCCESS: undefined,\n    UNAUTHORIZED: 'UNAUTHORIZED',\n    NOT_EXIST_USER: 'NOT_EXIST_USER',\n    NOT_LOGIN: 'NOT_LOGIN',\n    INVALID: 'INVALID',\n};\n\nexport { API_STATUS, DEBUGGABLE_USER_INFO, RESPONSE_CODE };\n","const WEB_URL = {\n    ROOT: '/',\n    EMPTY: '/empty',\n    DENIED: '/denied',\n    HOME: '/home'\n}\n\nexport { WEB_URL }","import * as Sentry from '@sentry/browser';\nimport axios from 'axios';\nimport NProgress from 'nprogress';\nimport lodash from 'lodash';\nimport { RESPONSE_CODE } from '@type/apiConstants';\nimport { WEB_URL } from '@type/urlConstants';\n\nconst DENIED_RESULT_CODES = [RESPONSE_CODE.UNAUTHORIZED, RESPONSE_CODE.NOT_EXIST_USER];\n\naxios.defaults.headers.common = {\n    ...axios.defaults.headers.common,\n    Pragma: 'no-cache'\n}\n\nconst setupAxios = () => {\n    return Promise.resolve().then(() => {\n        axios.interceptors.request.use(\n            async (config) => {\n                NProgress.start();\n                // setup pre request here\n                return config;\n            },\n            (error) => {\n                NProgress.done();\n                Sentry.captureException(error);\n                return Promise.reject(error);\n            }\n        );\n\n        axios.interceptors.response.use(\n            (response) => {\n                NProgress.done();\n\n                if (!lodash.get(response, 'config.options.ignoreCommonError') && lodash.get(response, 'data.code')) {\n                    if (DENIED_RESULT_CODES.includes(response.data.code)) {\n                        window.location.href = WEB_URL.DENIED;\n                    }\n\n                    if (response.data.code === RESPONSE_CODE.NOT_LOGIN) {\n                        window.location.href = `${process.env.AUTH_URL}/auth/page/login?backUrl=${process.env.REACT_APP_WEB_URL}`;\n                    }\n                }\n\n                return response;\n            },\n            (error) => {\n                NProgress.done();\n                Sentry.captureException(error);\n                return Promise.reject(error);\n            }\n        );\n    })\n}\n\nexport default setupAxios","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as Sentry from \"@sentry/react\";\nimport { Integrations } from \"@sentry/tracing\";\nimport { handleIndexSetupError } from '@setup/error';\nimport setupAxios from '@setup/setupAxios';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Loading from './components/atoms/Loading';\n\nSentry.init({\n  dsn: process.env.REACT_APP_SENTRY_DSN,\n  autoSessionTracking: true,\n  integrations: [\n    new Integrations.BrowserTracing(),\n  ],\n\n  // We recommend adjusting this value in production, or using tracesSampler\n  // for finer control\n  tracesSampleRate: 1.0,\n});\n\nPromise.resolve()\n  .then(() => {\n    ReactDOM.render(<Loading></Loading>, document.getElementById('root'))\n  })\n  .then(() => setupAxios())\n  .then(() => {\n    const Portfolio = React.lazy(() => import('./components/templates/Portfolio'));\n    const Blog = React.lazy(() => import('./components/templates/Blog'));\n    ReactDOM.render(\n      <React.StrictMode>\n        <Suspense fallback={<Loading></Loading>}>\n          <BrowserRouter>\n            <Route exact path=\"/blog\" component={Blog}/>\n            <Route path=\"/\" component={Portfolio}/>\n          </BrowserRouter>\n        </Suspense>\n      </React.StrictMode>,\n      document.getElementById('root')\n    );\n  })\n  .catch(handleIndexSetupError);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import './index.css';\n\nconst hostname = window.location.hostname;\nconst path = window.location.pathname;\n\nconst mobileUrl = process.env.REACT_APP_MOBILE;\nconsole.log(\"hostname = \", hostname, process.env.REACT_APP_MOBILE)\n\nif (hostname.startsWith(mobileUrl)) {\n    require('./index.mobile')\n} else {\n    if (path.startsWith('/blog')) {\n        require('./index.blog');\n    } else if (path.startsWith('/profile')) {\n        require('./index.profile');\n    } \n    // else if (path.startsWith('/denied')) {\n    //     require('./index.denied');\n    // } \n    // else if (path.startsWith('/error')) {\n    //     require('./index.error');\n    // } \n    else {\n        require('./index.profile');\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <h1>Mobile</h1>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as Sentry from \"@sentry/react\";\nimport { Integrations } from \"@sentry/tracing\";\nimport { handleIndexSetupError } from '@setup/error';\nimport setupAxios from '@setup/setupAxios';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport Loading from './components/atoms/Loading';\n\nSentry.init({\n  dsn: process.env.REACT_APP_SENTRY_DSN,\n  autoSessionTracking: true,\n  integrations: [\n    new Integrations.BrowserTracing(),\n  ],\n\n  // We recommend adjusting this value in production, or using tracesSampler\n  // for finer control\n  tracesSampleRate: 1.0,\n});\n\nPromise.resolve()\n  .then(() => {\n    ReactDOM.render(<Loading></Loading>, document.getElementById('root'))\n  })\n  .then(() => setupAxios())\n  .then(() => {\n    const Blog = React.lazy(() => import('./components/templates/Blog'));\n    ReactDOM.render(\n      <React.StrictMode>\n        <Suspense fallback={<Loading></Loading>}>\n          <BrowserRouter>\n            <Blog />\n          </BrowserRouter>\n        </Suspense>\n      </React.StrictMode>,\n      document.getElementById('root')\n    );\n  })\n  .catch(handleIndexSetupError);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}